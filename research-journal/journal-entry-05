Week of 13 June 2016
Journal Entry 05

Reading Ch.3 and re-reading Ch.2 of category theory book.
Reviewed SystemT lecture implementation of evaluator.

Monday 13 June 2016:

 Made changes to Eval.hs. I'm a little unsure of what cases I need to cover from the evaluation rules. Obviously we want to handle Beta redux and recursion. Do we need to implement evaluation rules for a rule like t1 ~> t1' / app t1 t2 ~> app t1' t2? 

Tuesday 14 June 2016

 Finish Evaluator and typePres. Have questions about typePres: calling runTypeChecker requires a Ctx to be passed to it. Should I create a helper function (i.e typePres' :: Term -> Ctx -> Bool
     typePres' tm ctx = typePres ... 		) 
 Will ask these questions during weekly meeting today.

 Post-meeting & session conclusion: Fixed some Haskell errors in TypeCheck.hs. Fixed logic error in Eval.hs. TypeCheck.hs and Eval.hs should be complete now.

Wednesday 15 June 2016
 
 Implemented typePres' (changed type to accomodate passing a Ctx). My understanding is that by allowing a Ctx to be passed, we can check type preservation even on terms that are not closed.

 Wrote three main functions without checking if code compiled first time. It did not. However, I am close to finishing this part of the project and moving on to testing. I just need learn a little bit more about IO monads and using other monads with different type constraints inside of an IO monad.

Thursday 16 June 2016

 Primarily trouble shooting, reading Haskell monad documentation, brushing up on IO.

Friday 17 June 2016
 
 Corrected errors in Main.hs dealing with IO monads. Pushed changes to repo, still pending further testing. Michael Townsend demonstrated simple examples of functors in Cat Theory seminar in Haskell.
